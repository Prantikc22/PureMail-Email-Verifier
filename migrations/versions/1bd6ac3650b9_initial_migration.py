"""initial migration

Revision ID: 1bd6ac3650b9
Revises: 
Create Date: 2024-11-23 17:46:37.187681

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '1bd6ac3650b9'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=80), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('blacklist_monitor',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('domain', sa.String(length=255), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('ip_version', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('last_checked', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('dmarc_record',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('domain', sa.String(length=255), nullable=False),
    sa.Column('policy', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('last_checked', sa.DateTime(), nullable=True),
    sa.Column('is_valid', sa.Boolean(), nullable=True),
    sa.Column('spf_record', sa.String(length=255), nullable=True),
    sa.Column('dkim_record', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('verification',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('filename', sa.String(length=255), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('total_emails', sa.Integer(), nullable=True),
    sa.Column('valid_emails', sa.Integer(), nullable=True),
    sa.Column('invalid_format', sa.Integer(), nullable=True),
    sa.Column('disposable', sa.Integer(), nullable=True),
    sa.Column('role_based', sa.Integer(), nullable=True),
    sa.Column('dns_error', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('results', sa.Text(), nullable=True),
    sa.Column('avg_score', sa.Float(), nullable=True),
    sa.Column('reply_score', sa.Float(), nullable=True),
    sa.Column('person_score', sa.Float(), nullable=True),
    sa.Column('engagement_score', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('blacklist_entry',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('monitor_id', sa.Integer(), nullable=False),
    sa.Column('blacklist_name', sa.String(length=255), nullable=True),
    sa.Column('listed_on', sa.DateTime(), nullable=True),
    sa.Column('delisted_on', sa.DateTime(), nullable=True),
    sa.Column('reason', sa.Text(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.ForeignKeyConstraint(['monitor_id'], ['blacklist_monitor.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('catch_all_score',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('verification_id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('score', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('factors', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['verification_id'], ['verification.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('dmarc_report',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('dmarc_record_id', sa.Integer(), nullable=False),
    sa.Column('report_date', sa.DateTime(), nullable=True),
    sa.Column('source_ip', sa.String(length=45), nullable=True),
    sa.Column('authentication_results', sa.String(length=255), nullable=True),
    sa.Column('disposition', sa.String(length=50), nullable=True),
    sa.Column('dkim_result', sa.String(length=50), nullable=True),
    sa.Column('spf_result', sa.String(length=50), nullable=True),
    sa.Column('is_suspicious', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['dmarc_record_id'], ['dmarc_record.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('dmarc_report')
    op.drop_table('catch_all_score')
    op.drop_table('blacklist_entry')
    op.drop_table('verification')
    op.drop_table('dmarc_record')
    op.drop_table('blacklist_monitor')
    op.drop_table('user')
    # ### end Alembic commands ###
